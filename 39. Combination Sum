class Solution {
    public void findCombinations(int[] arr,int idx, int target,List<List<Integer>> ans,List<Integer> ds){
        if(idx==arr.length){
            if(target==0){
                ans.add(new ArrayList<Integer>(ds));
            }
            return;
        }
        
        if(arr[idx]<=target){
            ds.add(arr[idx]);
            findCombinations(arr,idx,target-arr[idx],ans,ds);
            ds.remove(ds.size()-1);
        }
        findCombinations(arr,idx+1,target,ans,ds);
    }
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> ans=new ArrayList<>();
        findCombinations(candidates,0, target, ans, new ArrayList<>());
        return ans;
    }
}
